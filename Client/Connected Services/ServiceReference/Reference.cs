//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.ChangePasswordRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.ChangeUsernameRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.LoadMessagesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.LoadDialogsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.SendMessageRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.CreateDialogRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.ChangeDialogRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.AddUserToDialogRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.ConnectToDialogRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.AuthRequest))]
    public partial class Request : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangePasswordRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.User")]
    [System.SerializableAttribute()]
    public partial class ChangePasswordRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPassword {
            get {
                return this.OldPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPasswordField, value) != true)) {
                    this.OldPasswordField = value;
                    this.RaisePropertyChanged("OldPassword");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeUsernameRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.User")]
    [System.SerializableAttribute()]
    public partial class ChangeUsernameRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewName {
            get {
                return this.NewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewNameField, value) != true)) {
                    this.NewNameField = value;
                    this.RaisePropertyChanged("NewName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadMessagesRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Load")]
    [System.SerializableAttribute()]
    public partial class LoadMessagesRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastMessageIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogId {
            get {
                return this.DialogIdField;
            }
            set {
                if ((this.DialogIdField.Equals(value) != true)) {
                    this.DialogIdField = value;
                    this.RaisePropertyChanged("DialogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastMessageId {
            get {
                return this.LastMessageIdField;
            }
            set {
                if ((this.LastMessageIdField.Equals(value) != true)) {
                    this.LastMessageIdField = value;
                    this.RaisePropertyChanged("LastMessageId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadDialogsRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Load")]
    [System.SerializableAttribute()]
    public partial class LoadDialogsRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LastDialogIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LastDialogId {
            get {
                return this.LastDialogIdField;
            }
            set {
                if ((this.LastDialogIdField.Equals(value) != true)) {
                    this.LastDialogIdField = value;
                    this.RaisePropertyChanged("LastDialogId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendMessageRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Messaging")]
    [System.SerializableAttribute()]
    public partial class SendMessageRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogId {
            get {
                return this.DialogIdField;
            }
            set {
                if ((this.DialogIdField.Equals(value) != true)) {
                    this.DialogIdField = value;
                    this.RaisePropertyChanged("DialogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateDialogRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Dialog")]
    [System.SerializableAttribute()]
    public partial class CreateDialogRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeDialogRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Dialog")]
    [System.SerializableAttribute()]
    public partial class ChangeDialogRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogId {
            get {
                return this.DialogIdField;
            }
            set {
                if ((this.DialogIdField.Equals(value) != true)) {
                    this.DialogIdField = value;
                    this.RaisePropertyChanged("DialogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewName {
            get {
                return this.NewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewNameField, value) != true)) {
                    this.NewNameField = value;
                    this.RaisePropertyChanged("NewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddUserToDialogRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Dialog")]
    [System.SerializableAttribute()]
    public partial class AddUserToDialogRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AddedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AddedId {
            get {
                return this.AddedIdField;
            }
            set {
                if ((this.AddedIdField.Equals(value) != true)) {
                    this.AddedIdField = value;
                    this.RaisePropertyChanged("AddedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogId {
            get {
                return this.DialogIdField;
            }
            set {
                if ((this.DialogIdField.Equals(value) != true)) {
                    this.DialogIdField = value;
                    this.RaisePropertyChanged("DialogId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectToDialogRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Dialog")]
    [System.SerializableAttribute()]
    public partial class ConnectToDialogRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogId {
            get {
                return this.DialogIdField;
            }
            set {
                if ((this.DialogIdField.Equals(value) != true)) {
                    this.DialogIdField = value;
                    this.RaisePropertyChanged("DialogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthRequest", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Auth")]
    [System.SerializableAttribute()]
    public partial class AuthRequest : Client.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.LoadMessagesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.LoadDialogsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.SendMessageResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.CreateDialogResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.ConnectToDialogResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.AuthResponse))]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.Result ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.Result Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadMessagesResponse", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Load")]
    [System.SerializableAttribute()]
    public partial class LoadMessagesResponse : Client.ServiceReference.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.MessageDto[] MessagesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.MessageDto[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadDialogsResponse", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Load")]
    [System.SerializableAttribute()]
    public partial class LoadDialogsResponse : Client.ServiceReference.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.DialogDto[] DialgosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.DialogDto[] Dialgos {
            get {
                return this.DialgosField;
            }
            set {
                if ((object.ReferenceEquals(this.DialgosField, value) != true)) {
                    this.DialgosField = value;
                    this.RaisePropertyChanged("Dialgos");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendMessageResponse", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Messaging")]
    [System.SerializableAttribute()]
    public partial class SendMessageResponse : Client.ServiceReference.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MessageIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateDialogResponse", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Dialog")]
    [System.SerializableAttribute()]
    public partial class CreateDialogResponse : Client.ServiceReference.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectToDialogResponse", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Dialog")]
    [System.SerializableAttribute()]
    public partial class ConnectToDialogResponse : Client.ServiceReference.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.DialogDto DialogInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.DialogDto DialogInfo {
            get {
                return this.DialogInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DialogInfoField, value) != true)) {
                    this.DialogInfoField = value;
                    this.RaisePropertyChanged("DialogInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthResponse", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Auth")]
    [System.SerializableAttribute()]
    public partial class AuthResponse : Client.ServiceReference.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts")]
    public enum Result : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Succesfully = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyRegister = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyLogged = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongLogin = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongPassword = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserAlreadyInDialog = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotPremissions = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerException = 1024,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageDto", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.DTO")]
    [System.SerializableAttribute()]
    public partial class MessageDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.UserDto AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.UserDto Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogId {
            get {
                return this.DialogIdField;
            }
            set {
                if ((this.DialogIdField.Equals(value) != true)) {
                    this.DialogIdField = value;
                    this.RaisePropertyChanged("DialogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.DTO")]
    [System.SerializableAttribute()]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DialogDto", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.DTO")]
    [System.SerializableAttribute()]
    public partial class DialogDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<long, Client.ServiceReference.MessageDto> MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<System.Guid, Client.ServiceReference.UserDto> UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<long, Client.ServiceReference.MessageDto> Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<System.Guid, Client.ServiceReference.UserDto> Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.UsernameChangedEventArgs))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.MessageSendEventArgs))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.CreateDialogEventArgs))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.AddedUserToDialogEventArgs))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.ChangeDialogEventArgs))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.ServiceReference.UserConnectedEventArgs))]
    public partial class ServerEventArgs : System.EventArgs, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsernameChangedEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.User")]
    [System.SerializableAttribute()]
    public partial class UsernameChangedEventArgs : Client.ServiceReference.ServerEventArgs {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewName {
            get {
                return this.NewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewNameField, value) != true)) {
                    this.NewNameField = value;
                    this.RaisePropertyChanged("NewName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageSendEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Messaging")]
    [System.SerializableAttribute()]
    public partial class MessageSendEventArgs : Client.ServiceReference.ServerEventArgs {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.MessageDto MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.MessageDto Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateDialogEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Dialog")]
    [System.SerializableAttribute()]
    public partial class CreateDialogEventArgs : Client.ServiceReference.ServerEventArgs {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.DialogDto NewDialogField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.DialogDto NewDialog {
            get {
                return this.NewDialogField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDialogField, value) != true)) {
                    this.NewDialogField = value;
                    this.RaisePropertyChanged("NewDialog");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddedUserToDialogEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Dialog")]
    [System.SerializableAttribute()]
    public partial class AddedUserToDialogEventArgs : Client.ServiceReference.ServerEventArgs {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.UserDto AddedUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.UserDto AddedUser {
            get {
                return this.AddedUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedUserField, value) != true)) {
                    this.AddedUserField = value;
                    this.RaisePropertyChanged("AddedUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogId {
            get {
                return this.DialogIdField;
            }
            set {
                if ((this.DialogIdField.Equals(value) != true)) {
                    this.DialogIdField = value;
                    this.RaisePropertyChanged("DialogId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeDialogEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Dialog")]
    [System.SerializableAttribute()]
    public partial class ChangeDialogEventArgs : Client.ServiceReference.ServerEventArgs {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.ChangeDialogRequest ChangedInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.ChangeDialogRequest ChangedInfo {
            get {
                return this.ChangedInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedInfoField, value) != true)) {
                    this.ChangedInfoField = value;
                    this.RaisePropertyChanged("ChangedInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserConnectedEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Library.Contracts.Auth")]
    [System.SerializableAttribute()]
    public partial class UserConnectedEventArgs : Client.ServiceReference.ServerEventArgs {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference.UserDto UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference.UserDto User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService", CallbackContract=typeof(Client.ServiceReference.IServiceCallback))]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registration", ReplyAction="http://tempuri.org/IService/RegistrationResponse")]
        Client.ServiceReference.AuthResponse Registration(Client.ServiceReference.AuthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registration", ReplyAction="http://tempuri.org/IService/RegistrationResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.AuthResponse> RegistrationAsync(Client.ServiceReference.AuthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Authorization", ReplyAction="http://tempuri.org/IService/AuthorizationResponse")]
        Client.ServiceReference.AuthResponse Authorization(Client.ServiceReference.AuthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Authorization", ReplyAction="http://tempuri.org/IService/AuthorizationResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.AuthResponse> AuthorizationAsync(Client.ServiceReference.AuthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateDialog", ReplyAction="http://tempuri.org/IService/CreateDialogResponse")]
        Client.ServiceReference.CreateDialogResponse CreateDialog(Client.ServiceReference.CreateDialogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateDialog", ReplyAction="http://tempuri.org/IService/CreateDialogResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.CreateDialogResponse> CreateDialogAsync(Client.ServiceReference.CreateDialogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangeDialog", ReplyAction="http://tempuri.org/IService/ChangeDialogResponse")]
        Client.ServiceReference.Response ChangeDialog(Client.ServiceReference.ChangeDialogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangeDialog", ReplyAction="http://tempuri.org/IService/ChangeDialogResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.Response> ChangeDialogAsync(Client.ServiceReference.ChangeDialogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUserToDialog", ReplyAction="http://tempuri.org/IService/AddUserToDialogResponse")]
        Client.ServiceReference.Response AddUserToDialog(Client.ServiceReference.AddUserToDialogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUserToDialog", ReplyAction="http://tempuri.org/IService/AddUserToDialogResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.Response> AddUserToDialogAsync(Client.ServiceReference.AddUserToDialogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConnectToDialog", ReplyAction="http://tempuri.org/IService/ConnectToDialogResponse")]
        Client.ServiceReference.ConnectToDialogResponse ConnectToDialog(Client.ServiceReference.ConnectToDialogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConnectToDialog", ReplyAction="http://tempuri.org/IService/ConnectToDialogResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.ConnectToDialogResponse> ConnectToDialogAsync(Client.ServiceReference.ConnectToDialogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoadMessages", ReplyAction="http://tempuri.org/IService/LoadMessagesResponse")]
        Client.ServiceReference.LoadMessagesResponse LoadMessages(Client.ServiceReference.LoadMessagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoadMessages", ReplyAction="http://tempuri.org/IService/LoadMessagesResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.LoadMessagesResponse> LoadMessagesAsync(Client.ServiceReference.LoadMessagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoadDialogs", ReplyAction="http://tempuri.org/IService/LoadDialogsResponse")]
        Client.ServiceReference.LoadDialogsResponse LoadDialogs(Client.ServiceReference.LoadDialogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoadDialogs", ReplyAction="http://tempuri.org/IService/LoadDialogsResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.LoadDialogsResponse> LoadDialogsAsync(Client.ServiceReference.LoadDialogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendMessage", ReplyAction="http://tempuri.org/IService/SendMessageResponse")]
        Client.ServiceReference.SendMessageResponse SendMessage(Client.ServiceReference.SendMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendMessage", ReplyAction="http://tempuri.org/IService/SendMessageResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.SendMessageResponse> SendMessageAsync(Client.ServiceReference.SendMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Connect", ReplyAction="http://tempuri.org/IService/ConnectResponse")]
        System.Guid Connect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Connect", ReplyAction="http://tempuri.org/IService/ConnectResponse")]
        System.Threading.Tasks.Task<System.Guid> ConnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Disconnect", ReplyAction="http://tempuri.org/IService/DisconnectResponse")]
        void Disconnect(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Disconnect", ReplyAction="http://tempuri.org/IService/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LogOut", ReplyAction="http://tempuri.org/IService/LogOutResponse")]
        System.Guid LogOut(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LogOut", ReplyAction="http://tempuri.org/IService/LogOutResponse")]
        System.Threading.Tasks.Task<System.Guid> LogOutAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangePassword", ReplyAction="http://tempuri.org/IService/ChangePasswordResponse")]
        Client.ServiceReference.Response ChangePassword(Client.ServiceReference.ChangePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangePassword", ReplyAction="http://tempuri.org/IService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.Response> ChangePasswordAsync(Client.ServiceReference.ChangePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangeUsername", ReplyAction="http://tempuri.org/IService/ChangeUsernameResponse")]
        Client.ServiceReference.Response ChangeUsername(Client.ServiceReference.ChangeUsernameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangeUsername", ReplyAction="http://tempuri.org/IService/ChangeUsernameResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.Response> ChangeUsernameAsync(Client.ServiceReference.ChangeUsernameRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/OnUserConnected")]
        void OnUserConnected(Client.ServiceReference.UserConnectedEventArgs args);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/OnCreatedDialog")]
        void OnCreatedDialog(Client.ServiceReference.CreateDialogEventArgs args);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/OnAddedUserToDialog")]
        void OnAddedUserToDialog(Client.ServiceReference.AddedUserToDialogEventArgs args);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/OnChangedDialog")]
        void OnChangedDialog(Client.ServiceReference.ChangeDialogEventArgs args);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/OnMessageSend")]
        void OnMessageSend(Client.ServiceReference.MessageSendEventArgs args);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/OnUserDiconnected")]
        void OnUserDiconnected(Client.ServiceReference.ServerEventArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OnUsernameChanged", ReplyAction="http://tempuri.org/IService/OnUsernameChangedResponse")]
        void OnUsernameChanged(Client.ServiceReference.UsernameChangedEventArgs args);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Client.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.DuplexClientBase<Client.ServiceReference.IService>, Client.ServiceReference.IService {
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Client.ServiceReference.AuthResponse Registration(Client.ServiceReference.AuthRequest request) {
            return base.Channel.Registration(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.AuthResponse> RegistrationAsync(Client.ServiceReference.AuthRequest request) {
            return base.Channel.RegistrationAsync(request);
        }
        
        public Client.ServiceReference.AuthResponse Authorization(Client.ServiceReference.AuthRequest request) {
            return base.Channel.Authorization(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.AuthResponse> AuthorizationAsync(Client.ServiceReference.AuthRequest request) {
            return base.Channel.AuthorizationAsync(request);
        }
        
        public Client.ServiceReference.CreateDialogResponse CreateDialog(Client.ServiceReference.CreateDialogRequest request) {
            return base.Channel.CreateDialog(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.CreateDialogResponse> CreateDialogAsync(Client.ServiceReference.CreateDialogRequest request) {
            return base.Channel.CreateDialogAsync(request);
        }
        
        public Client.ServiceReference.Response ChangeDialog(Client.ServiceReference.ChangeDialogRequest request) {
            return base.Channel.ChangeDialog(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.Response> ChangeDialogAsync(Client.ServiceReference.ChangeDialogRequest request) {
            return base.Channel.ChangeDialogAsync(request);
        }
        
        public Client.ServiceReference.Response AddUserToDialog(Client.ServiceReference.AddUserToDialogRequest request) {
            return base.Channel.AddUserToDialog(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.Response> AddUserToDialogAsync(Client.ServiceReference.AddUserToDialogRequest request) {
            return base.Channel.AddUserToDialogAsync(request);
        }
        
        public Client.ServiceReference.ConnectToDialogResponse ConnectToDialog(Client.ServiceReference.ConnectToDialogRequest request) {
            return base.Channel.ConnectToDialog(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.ConnectToDialogResponse> ConnectToDialogAsync(Client.ServiceReference.ConnectToDialogRequest request) {
            return base.Channel.ConnectToDialogAsync(request);
        }
        
        public Client.ServiceReference.LoadMessagesResponse LoadMessages(Client.ServiceReference.LoadMessagesRequest request) {
            return base.Channel.LoadMessages(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.LoadMessagesResponse> LoadMessagesAsync(Client.ServiceReference.LoadMessagesRequest request) {
            return base.Channel.LoadMessagesAsync(request);
        }
        
        public Client.ServiceReference.LoadDialogsResponse LoadDialogs(Client.ServiceReference.LoadDialogsRequest request) {
            return base.Channel.LoadDialogs(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.LoadDialogsResponse> LoadDialogsAsync(Client.ServiceReference.LoadDialogsRequest request) {
            return base.Channel.LoadDialogsAsync(request);
        }
        
        public Client.ServiceReference.SendMessageResponse SendMessage(Client.ServiceReference.SendMessageRequest request) {
            return base.Channel.SendMessage(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.SendMessageResponse> SendMessageAsync(Client.ServiceReference.SendMessageRequest request) {
            return base.Channel.SendMessageAsync(request);
        }
        
        public System.Guid Connect() {
            return base.Channel.Connect();
        }
        
        public System.Threading.Tasks.Task<System.Guid> ConnectAsync() {
            return base.Channel.ConnectAsync();
        }
        
        public void Disconnect(System.Guid id) {
            base.Channel.Disconnect(id);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(System.Guid id) {
            return base.Channel.DisconnectAsync(id);
        }
        
        public System.Guid LogOut(System.Guid id) {
            return base.Channel.LogOut(id);
        }
        
        public System.Threading.Tasks.Task<System.Guid> LogOutAsync(System.Guid id) {
            return base.Channel.LogOutAsync(id);
        }
        
        public Client.ServiceReference.Response ChangePassword(Client.ServiceReference.ChangePasswordRequest request) {
            return base.Channel.ChangePassword(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.Response> ChangePasswordAsync(Client.ServiceReference.ChangePasswordRequest request) {
            return base.Channel.ChangePasswordAsync(request);
        }
        
        public Client.ServiceReference.Response ChangeUsername(Client.ServiceReference.ChangeUsernameRequest request) {
            return base.Channel.ChangeUsername(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.Response> ChangeUsernameAsync(Client.ServiceReference.ChangeUsernameRequest request) {
            return base.Channel.ChangeUsernameAsync(request);
        }
    }
}
